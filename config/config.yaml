# ===================================================================
# Crop Disease Detection Project Configuration
# Compatible with Colab notebook implementation
# Author: Ali SU - Hacettepe University
# ===================================================================

project:
  name: "crop-disease-detection"
  description: "Comparative Analysis of Vision Transformers and CNNs for Crop Disease Detection"
  author: "Ali SU - Hacettepe University"
  github: "https://github.com/alls7/crop-disease-detection"
  version: "1.0.0"

# Dataset Configuration (PlantVillage)
dataset:
  name: "PlantVillage"
  source: "kaggle"
  kaggle_dataset: "emmarex/plantdisease"
  local_path: "data/plantvillage"
  num_classes: 15  # Subset used in Colab
  total_images: 20638  # As observed in Colab results
  image_size: 224
  
  # Data splits (as used in Colab)
  splits:
    train: 0.70
    validation: 0.15
    test: 0.15
  
  # Data loading
  batch_size: 32
  num_workers: 2
  pin_memory: true

# Data Augmentation (Agricultural-specific)
augmentation:
  training:
    resize_padding: 32  # Resize to 256, then crop to 224
    random_crop: true
    horizontal_flip: 0.5
    vertical_flip: 0.3
    rotation_degrees: 15  # Moderate for crops
    color_jitter:
      brightness: 0.2
      contrast: 0.2
      saturation: 0.1
      hue: 0.05
  
  validation:
    resize_only: true

# Model Architectures
models:
  cnn:
    resnet50:
      name: "resnet50"
      pretrained: true
      dropout_rate: 0.3
      fine_tune_strategy: "gradual"
      
    efficientnet_b0:
      name: "efficientnet_b0"
      pretrained: true
      dropout_rate: 0.3
      fine_tune_strategy: "gradual"
      # Selected as primary CNN in Colab results
      
  vit:
    vit_base_patch16_224:
      name: "vit_base_patch16_224"
      pretrained: true
      dropout_rate: 0.2
      attention_dropout: 0.1
      fine_tune_strategy: "gradual"
      img_size: 224
      # Selected as primary ViT in Colab results
      
    deit_small_patch16_224:
      name: "deit_small_patch16_224"
      pretrained: true
      dropout_rate: 0.2
      attention_dropout: 0.1
      fine_tune_strategy: "gradual"
      img_size: 224

# Training Configuration (As used in Colab)
training:
  # Two-phase transfer learning strategy
  phase1:
    name: "classification_head"
    epochs: 10
    learning_rate: 3e-4
    optimizer: "adam"
    scheduler: "cosine_annealing"
    early_stopping_patience: 5
    
  phase2:
    name: "full_fine_tuning"
    epochs: 15  # Extended in Colab to 20 for CNN, 15 for ViT
    learning_rate: 3e-5  # Lower for fine-tuning
    optimizer: "adam"
    scheduler: "cosine_annealing"
    early_stopping_patience: 5
  
  # Loss and metrics
  loss_function: "cross_entropy"
  metrics:
    - "accuracy"
    - "top5_accuracy"
  
  # Optimizer settings
  optimizer_params:
    betas: [0.9, 0.999]
    eps: 1e-8
    weight_decay: 1e-4
  
  # Scheduler settings
  scheduler_params:
    eta_min: 1e-6

# Results (From successful Colab runs)
results:
  cnn_efficientnet_b0:
    test_accuracy: 0.9931
    test_top5_accuracy: 1.0000
    total_parameters: 4800139
    trainable_parameters_phase1: 792591
    model_size_mb: 18.31
    training_time_seconds: 1753
    
  vit_base_patch16:
    test_accuracy: 0.9990
    test_top5_accuracy: 1.0000
    total_parameters: 86330639
    trainable_parameters_phase1: 531983
    model_size_mb: 329.33
    training_time_seconds: 10022

# Hardware Configuration
hardware:
  device: "auto"  # cuda if available, else cpu
  mixed_precision: false
  gpu_memory_fraction: 0.9

# Logging and Monitoring
logging:
  level: "INFO"
  save_logs: true
  log_dir: "logs"
  
  # Training history tracking
  track_metrics:
    - "train_loss"
    - "train_accuracy"
    - "val_loss"
    - "val_accuracy"
    - "val_top5_accuracy"
    - "learning_rate"

# Paths and Directories
paths:
  data_dir: "data"
  models_dir: "models"
  results_dir: "results"
  checkpoints_dir: "results/checkpoints"
  plots_dir: "results/plots"
  logs_dir: "logs"

# Reproducibility
reproducibility:
  seed: 42
  deterministic: true
  benchmark: false

# Experiment Tracking
experiment:
  name: "cnn_vs_vit_comparison"
  tags:
    - "crop_disease_detection"
    - "plantvillage"
    - "transfer_learning"
    - "cnn_vs_vit"
    - "agricultural_ai"
  
  # Model selection for comparison
  selected_models:
    cnn: "efficientnet_b0"  # Winner: efficiency
    vit: "vit_base_patch16_224"  # Winner: accuracy

# Kaggle API Configuration
kaggle:
  dataset_name: "emmarex/plantdisease"
  api_key_path: "~/.kaggle/kaggle.json"
  download_path: "data"
